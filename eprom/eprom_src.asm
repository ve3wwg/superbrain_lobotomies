;
;	INTERTEC SUPERBRAIN EPROM (2716)
;
;	SEE LOC 006D FOR PATCHING 35 CYLS TO 40 ETC.
;
;	DISASSEMBLED Mon Oct 10 02:10:42 1994 BY WARREN GAY.
;
	LD	A,(08800H)	; 0000
	CP	055H		; 0003
	JP	NZ,00013H	; 0005
;
	LD	A,(08801H)	; 0008
	CP	0AAH		; 000B
	JP	NZ,00013H	; 000D
;
	JP	00021H		; 0010
;
;	MAIN CPU CODE... SYSTEM INITIALIZATION.
;	COPY ROM 0400 CODE TO C000, THEN JP C006
;
L0013:	LD	HL,00400H	; 0013
	LD	DE,0C000H	; 0016
	LD	BC,00400H	; 0019
	LDIR			; 001C
	JP	0C006H		; 001E
;
;	THIS CODE IS RUN BY THE FLOPPY CONTROLLER Z80 CPU.
;
;	KEY LOCATIONS:
;
;	8802	REQUEST TYPE:
;		00 - FDC RESTORE (SEEK HOME)
;		01 - DISK READ
;		02 - WRITE DATA (NON DELETED)
;		03 - WRITE DATA (DELETED)
;		04 - FORMAT REQUEST
;		05 - DRIVE SELECT?
;	8803	DRIVE NO. IN MASK 03H
;		(MODIFIED INTERPRETATION BELOW)
;		THIS CODE BORROWS THIS LOCATION TO PUT DRIVE NO. INTO
;		BIT MAP FORM. BIT 1=A, 2=B, 3=C, 4=D.
;		BIT 5 IS HEAD SELECT, BIT5=1 IS SIDE 2
;	8804	SECTOR NO. FOR REQUEST
;	8805	TRACK NO. IN 1'S COMPLEMENT
;	8806	DRIVE NO. IN BIT MAPPED FORM (SAVED FROM 8803)
;	8807	NON ZERO WHEN MAIN Z80 REQUESTS CTL Z80 SERVICE
;	8808	BUFFER START??
;
;
;	8A08	19 FOR READ,	00 FOR WRITE
;	8A09	00 FOR READ,	05 FOR WRITE
;	8A0A	FLAG BYTE??
;		00 - FOR READ
;		01 - FOR WRITE
;	8A0B	APPEARS TO CONTAIN FDC STATUS REG BITS
;	8A0C	FLAG BYTE??
;		00 - OTHER
;		FF - FORMAT REQUEST TYPE 04 PROCESSING
;	8A0D	05 ??
;	8A0E	00 ??
;	8A0F	BUFFER FOR READING ID FIELDS FOR SECTORS (160 BYTES??)
;	8A19	COUNT OF BYTES AT 8A1A [1]
;	8A1A	BUFFER [1]
;		[1] FOR FORMAT OPERATION, 8A19 HAD COUNT OF 01
;		    WHILE 8A1A HAD FF FOR SIDE 00 (1'S COMPLEMENT) 
;		    OR FE FOR SIDE 01 (1'S COMPLEMENT).
;
;	I/O PORTS FOR CTL Z80
;
;		READ		WRITE		FDC = SINGLE DENSITY (MFM)
;	08	FDC STATUS	FDC CMD
;	09	FDC TRACK REG	FDC TRACK REG
;	0A	FDC SECTOR REG	FDC SECTOR REG
;	0B	FDC DATA REG	FDC DATA REG
;
;	10	SELECTS DRIVE (BITS 4,3,2,1), HEAD(BIT5), BIT0=?
;		(OUTPUT ONLY?)
;
L0021:	LD	SP,08BFFH	; 0021	STACK POINTER
	LD	A,000H		; 0024
	LD	(08800H),A	; 0026	ZERO 8800
	LD	(08801H),A	; 0029	ZERO 8801
	LD	(08807H),A	; 002C	ZERO 8807
	LD	(08806H),A	; 002F	ZERO 8806
;
;	ACCESS RAM FROM MAIN Z80?
;
	OUT	(10H),A		; 0032	SEND ZERO -> PORT(10H)
	LD	A,(002FH)	; 0034	?
	OUT	(08H),A		; 0037	RESTORE FDC CMD????
;
;	WAIT FOR A MAIN Z80 REQUEST (POLL 8807 BYTE)
;
L0039:	LD	A,00H		; 0039
	LD	(8A0CH),A	; 003B	ZERO 8A0C
	LD	SP,08BFFH	; 003E	RESET STACK POINTER
;
;	WAIT FOR MAIN Z80 TO REQUEST A SERVICE(?)
;
L0041:	LD	A,(8807H)	; 0041	GET 8807
	OR	A		; 0044	TEST BYTE
	JP	Z,L0041		; 0045	LOOP UNTIL NZ (UNTIL A REQUEST)
;
;	GOT A MAIN CPU REQUEST
;
	LD	A,02FH		; 0048	D0 FDC CMD: FORCE INTERRUPT
	OUT	(008H),A	; 004A	
	XOR	A		; 004C	A = 0
	LD	(8807H),A	; 004D	ZERO POLL BYTE (INDICATES INITIATED)
	LD	(8A0BH),A	; 0050	ZERO STATUS BYTE
;
;	8803 HAS DRIVE NO. IN MASK 03H
;
	LD	A,(8803H)	; 0053	DRIVE #(?)
	AND	03H		; 0056	MASK DRIVE BITS 0 & 1
	LD	B,A		; 0058	B=DRIVE #
	INC	B		; 0059	B=DRIVE # + 1
	LD	A,02H		; 005A	A=02H (BIT 1 = DRIVE A, BIT 2 = B)
;
L005C:	DEC	B		; 005C	WHEN 8803=00, THEN A=02H
	JP	Z,L0064		; 005D	JUMP, A HAS DRIVE BIT
	RLCA			; 0060	WHEN 8803=01, THEN A=04H
	JP	L005C		; 0061	WHEN 8803=02, THEN A=08H
;
;	A HAS DRIVE BIT, IN BITS 5 THROUGH 1 (BIT 1 = A, BIT 2 = B ETC.)
;
L0064:	AND	01EH		; 0064	MASK OUT DRIVE BIT
	LD	(8803H),A	; 0066	STUFF DRIVE BITS INTO 8803
	LD	A,(8805H)	; 0069	TRACK NO. (IN ONES COMPLEMENT)
	CPL			; 006C	TRACK NO. NOW POSITIVE
	SBC	A,23H		; 006D	MINUS 35 TRACKS
	JP	M,L007E		; 006F	JUMP IF FIRST SIDE
;
	CPL			; 0072	DIFF IN 1'S CPL NOW
	LD	(8805H),A	; 0073	MODIFY 8805 TO HOLD CYL NO.
;
;	BIT 5 = HEAD SELECT (SELECT OTHER SIDE)
;
	LD	A,(8803H)	; 0076
	OR	20H		; 0079	BIT 5 SELECTS OTHER SIDE
	LD	(8803H),A	; 007B	SAVE IN 8803
L007E:	LD	A,(8803H)	; 007E	GET CYL NO.
	OR	01H		; 0081	BIT 0 = 1 IN 8803 BYTE
	OUT	(10H),A		; 0083	SELECT DRIVE??
;
;	CHECK REQUEST TYPE
;
	LD	A,(8802H)	; 0085	REQUEST TYPE?
	CP	05H		; 0088	SELECT DRIVE?
	JP	Z,L02A2		; 008A	OP COMPLETE (DRIVE SELECT)
	CP	04H		; 008D	FORMAT REQUEST?
	JP	Z,L02BC		; 008F	JP IF FORMAT REQUEST
	CP	01H		; 0092	READ REQUEST?
	JP	Z,L00EB		; 0094	JUMP IF READING
	JP	P,L00F2		; 0097	JUMP IF WRITING (02=DATA, 03=DELETED)
;
;	FUNCTION CODE IS 00 OR NEGATIVE
;
	LD	HL,0005H	; 009A
	LD	(8A0DH),HL	; 009D	????
;
L00A0:	LD	A,(8803H)	; 00A0	BIT MAPPED DRIVE SELECT
	AND	1EH		; 00A3
	LD	(8806H),A	; 00A5	SAVED INTO 8806
;
	CALL	L00C8		; 00A8	FDC RESTORE
	OR	A		; 00AB
	AND	01CH		; 00AC	MASK STATUS BITS:
	XOR	004H		; 00AE	CHECK FOR RESTORE SEEK FAILURE
	LD	(8A0BH),A	; 00B0	SAVE STATUS RETURN BITS
	JP	Z,L022A		; 00B3	JUMP IF RESTORE SUCCESSFUL
;
	LD	HL,8A0DH	; 00B6
	LD	A,(HL)		; 00B9
	OR	A		; 00BA
	JP	Z,L0222		; 00BB	ERROR EXIT
;
	DEC	(HL)		; 00BE
	CALL	L03AA		; 00BF	STEP IN
	CALL	L03AA		; 00C2	STEP IN
	JP	L00A0		; 00C5
;
L00C8:	LD	A,(8802H)	; 00C8	REQUEST TYPE?
	OR	A		; 00CB	NON ZERO?
	JP	P,L00D4		; 00CC	JUMP IF POSITIVE REQUEST TYPE
;
	LD	A,0F0H		; 00CF	USE FDC CMD 0F: RESTORE W VERIFY
	JP	L00D6		; 00D1
;
L00D4:	LD	A,0F4H		; 00D4	USE FDC CMD 0B: RESTORE W NO VFY
L00D6:	OUT	(08H),A		; 00D6	INITIATE RESTORE
	CALL	L02B0		; 00D8	DELAYS...
	CALL	L02B0		; 00DB
	CALL	L02B0		; 00DE
	CALL	L02B0		; 00E1
	NOP			; 00E2
	NOP			; 00E3
	NOP			; 00E4
	NOP			; 00E5
	NOP			; 00E6
	CALL	L027C		; 00E7	AWAIT FDC READY
	RET			; 00EA
;
;
;
L00EB:	SUB	A		; 00EB	A=00 (READ REQUEST)
	LD	HL,0019H	; 00EC
	JP	00F7H		; 00EF
;
;
;
L00F2:	LD	A,01H		; 00F2	A=01 (WRITE REQUEST)
	LD	HL,0500H	; 00F4
;
;
;
L00F7:	LD	(8A08H),HL	; 00F7	ADDRESS
	LD	(8A0AH),A	; 00FA	TYPE OF CALL??
;
L00FD:	LD	A,(8806H)	; 00FD	DRIVE NO. IN BIT MAPPED FORM
	LD	D,A		; 0100	D=DRIVE NO. IN BIT MAPPED FORM
	LD	A,(8803H)	; 0101	DRIVE NO. IN BIT MAP FORM
	AND	1EH		; 0104	MASK OUT BIT MAPPED DRIVE NO.
	CP	D		; 0106	SAME?
	JP	Z,L0134		; 0107	JUMP IF SAME
;
	LD	A,(8803H)	; 010A	GET REQUESTED DRIVE NO. (BIT MAPPED)
	AND	01EH		; 010D	MASK DRIVE SELECTS
	LD	(8806H),A	; 010F	SAVE IN 8806
;
L0112:	CALL	L023B		; 0112	READ ADDRESS INTO 8A0F FOR 160 BYTES
	JP	Z,L012D		; 0115	JP IF NO ERRORS
;
	CALL	L03B9		; 0118	FDC STEP OUT
	CALL	L023B		; 011B	READ ADDRESS INTO 8A0F FOR 160 BYTES
	JP	Z,L012D		; 011E	JP IF NO ERRORS
;
	CALL	L00C8		; 0121	FDC RESTORE
	CALL	L023B		; 0124	READ ADDRESS INTO 8A0F FOR 160 BYTES
	JP	Z,L012D		; 0127	JP IF NO ERRORS
	JP	L0222		; 012A	JUMP IF WE GIVE UP
;
L012D:	IN	A,(0AH)		; 012D	READ INVERTED FDC SECTOR REG.
	OUT	(09H),A		; 012F	WRITE FDC TRACK REG???
	CALL	L03C8		; 0131	SMALL DELAY
;
L0134:	LD	HL,(8804H)	; 0134	H=TRACK NO., L=SECTOR NO.
	LD	C,L		; 0137	C=SECTOR NO.
	IN	A,(09H)		; 0138	READ FDC TRACK REG
	CP	H		; 013A	MATCHING TRACK IN H REG?
	JP	Z,L0160		; 013B	JUMP IF SAME TRACK
;
;	SEEK TO NEW TRACK
;
	LD	A,H		; 013E	TRACK NO. (1'S COMPLEMENT)
	OUT	(0BH),A		; 013F	WRITE TRACK TO FDC DR
	CALL	L03C8		; 0141	SMALL DELAY
	LD	A,0E4H		; 0144	FDC CMD 1B: SEEK
	OUT	(08H),A		; 0146	INITIATE SEEK
	CALL	L02B0		; 0148	DELAYS
	CALL	L02B0		; 014B
	CALL	L02B0		; 014E
	CALL	L02B0		; 0151
	NOP			; 0152
	NOP			; 0153
	NOP			; 0154
	NOP			; 0155
	NOP			; 0156
	NOP			; 0157
	NOP			; 0158
	NOP			; 0159
	CALL	L027C		; 015A	AWAIT FDC STATUS
	JP	L0112		; 015D
;
;	SET SECTOR
;
L0160:	LD	A,C		; 0160	GET REQUIRED SECTOR NO.
	OUT	(0AH),A		; 0161	WRITE FDC SECTOR REG.
	CALL	L03C8		; 0163	SMALL DELAY
	LD	HL,8808H	; 0166	HL=8808 (BUFFER START??)
;
	LD	A,(8A0AH)	; 0169	00=READ, 01=WRITE
	OR	A		; 016C
	JP	NZ,L01A5	; 016D	JUMP IF WRITE
;
	LD	A,77H		; 0170	FDC 88 CMD: READ SECTOR
	OUT	(08H),A		; 0172	INITIATE READ SECTOR
	CALL	L03C8		; 0174	SMALL DELAY
	LD	A,(8802H)	; 0177	REQUEST TYPE
	SUB	02H		; 017A	- 2
	JP	M,L0187		; 017C	IF -VE, JUMP
;
L017F:	CALL	L0191		; 017F	RETURN IF DRQ
	IN	A,(0BH)		; 0182	READ DATA BYTE
	JP	L017F		; 0184	READ UNTIL END OF SECTOR/ERROR
;
L0187:	CALL	L0191		; 0187	RETURN IF DRQ
	IN	A,(0BH)		; 018A	READ FDC DATA REG.
	LD	(HL),A		; 018C	STORE BYTE IN (HL)
	INC	HL		; 018D	BUMP BUFFER PTR
	JP	L0187		; 018E
;
;	RETURN IF DRQ, ELSE CATCH ERROR(S)
;
L0191:	IN	A,(08H)		; 0191	READ FDC STATUS (INVERTED STATUS!)
	RRA			; 0193	"NOT READY" BIT
	RRA			; 0194	"DRQ" BIT
	RET	NC		; 0195	RETURN IF DRQ
	RLA			; 0196	"LOST DATA" BIT
	JP	NC,L0191	; 0197	LOOP IF "LOST DATA BIT"
;
	LD	A,(8A0CH)	; 019A	ARE WE FORMATTING?
	OR	A		; 019D	FF IF FORMATTING
	JP	NZ,L03A8	; 019E	JP IF NOT ZERO (FORMATTING)
;
	POP	HL		; 01A1	POP OFF RETURN ADDRESS
	JP	L01BD		; 01A2	AND JP TO 01BD INSTEAD
;
L01A5:	CP	03H		; 01A5	01 IF WRITE, 03=??
	LD	A,57H		; 01A7	FDC CMD A8 = WRITE SECTOR (NOT DELETED)
	JP	NZ,01AEH	; 01A9	JP IF NOT 03 TYPE
;
	LD	A,50H		; 01AC	FDC CMD AF = WRITE SECTOR (DEL DATA)
L01AE:	OUT	(08H),A		; 01AE	INITIATE WRITE SECTOR
	CALL	L03C8		; 01B0	SMALL DELAY
L01B3:	CALL	L0191		; 01B3	EXITS FROM CALLED ROUTINE
	LD	A,(HL)		; 01B6
	OUT	(0BH),A		; 01B7
	INC	HL		; 01B9
	JP	L01B3		; 01BA
;
;	TEST FOR FDC ERROR(S)
;
;	7C  INCLUDES: WR PROT, WR FAULT, REC NOT FOUND, CRC ERROR & LOST DATA
;	1C  INCLUDES: CRC ERROR & LOST DATA
;
L01BD:	LD	C,7CH		; 01BD	C=7C
	LD	A,(8A0AH)	; 01BF
	OR	A		; 01C2
	JP	NZ,L01C8	; 01C3
	LD	C,1CH		; 01C6	C=1C
L01C8:	CALL	L027C		; 01C8	WAIT FOR FDC STATUS RTN IN A REG
	AND	C		; 01CB	MASK OUT IMPORTANT STATUS BITS
	LD	(8A0BH),A	; 01CC	SAVE IN 8A0B
	JP	Z,L0200		; 01CF	JUMP IF NO ERRORS
;
;	ERROR(S) FOUND
;
	LD	HL,8A08H	; 01D2	GET ADDRESS??
	LD	A,(8A0AH)	; 01D5
	OR	A		; 01D8
	JP	Z,L01E4		; 01D9

	INC	HL		; 01DC	BUMP ADDRESS
	DEC	(HL)		; 01DD	DECREMENT BYTE
	JP	Z,L0222		; 01DE	FAIL EXIT
	JP	L00FD		; 01E1	ANOTHER FAIL EXIT??
;
L01E4:	DEC	(HL)		; 01E4
	JP	NZ,L00FD	; 01E5	FAIL EXIT??
	LD	A,(08802H)	; 01E8
	CP	01H		; 01EB
	JP	NZ,L01F3	; 01ED
	JP	L0222		; 01F0	FAIL EXIT??
L01F3:	INC	HL		; 01F3
	DEC	(HL)		; 01F4
	JP	Z,L0222		; 01F5	FAIL EXIT?
	LD	A,001H		; 01F8
	LD	(8A0AH),A	; 01FA
	JP	L00FD		; 01FD	ANOTHER FAIL EXIT?
;
L0200:	LD	A,(08802H)	; 0200
	CP	06H		; 0203
	JP	Z,L022A		; 0205	DRIVE SELECT ONLY?
;
	OR	A		; 0208
	SBC	A,002H		; 0209
	JP	M,0022AH	; 020B
	LD	HL,08A0AH	; 020E
	SUB	A		; 0211
	CP	(HL)		; 0212
	JP	Z,0022AH	; 0213
	LD	(HL),A		; 0216
	LD	A,00AH		; 0217
	LD	(08A08H),A	; 0219
	LD	A,(08804H)	; 021C
	JP	00161H		; 021F
;
;	COMMAND COMPLETION EXIT
;
L0222:	LD	A,(8A0BH)	; 0222
	OR	01H		; 0225	OPERATION COMPLETED
	LD	(8A0BH),A	; 0227	STATUS RETURNED.
;
;	CLEAN UP EXIT
;
L022A:	LD	A,2FH		; 022A	FDC D0 CMD: FORCE INTERRUPT
	OUT	(08H),A		; 022C
	CALL	003C8H		; 022E	SMALL DELAY
;
	LD	A,(8803H)	; 0231
	AND	3EH		; 0234	DRIVE SELECT ONLY
	OUT	(10H),A		; 0236
	JP	L0039		; 0238	WAIT FOR NEW REQUEST
;
;	FDC READ ADDRESS REQUEST.
;
;	BUFFER USED IS AT 8A0F FOR 160 BYTES
;
;	FDC STATUS RETURNED IN A REG
;
L023B:	LD	HL,000AH	; 023B
	LD	(8A0DH),HL	; 023E	(8A0D)=0A, (8A0E)=00
L0241:	LD	DE,0A000H	; 0241	COUNT
	LD	HL,08A0FH	; 0244
	LD	A,03BH		; 0247	FDC C4 CMD: READ ADDRESS
	OUT	(08H),A		; 0249	INITIATED
;
L024B:	DEC	DE		; 024B	DEC COUNT
	LD	A,E		; 024C
	OR	D		; 024D
	JP	Z,L028B		; 024E	JUMP IF COUNT EXHAUSTED (FAILED)
	IN	A,(08H)		; 0251	READ INVERTED FDC STATUS
	RRA			; 0253
	RRA			; 0254	TEST DRQ
	JP	C,L024B		; 0255	LOOP UNTIL DRQ
;
L0258:	IN	A,(0BH)		; 0258	READ FDC DR REGISTER
	LD	(HL),A		; 025A	SAVE INTO BUFFER
	INC	HL		; 025B	BUMP ADDRESS
L025C:	IN	A,(08H)		; 025C	READ INVERTED FDC STATUS
	RRA			; 025E
	RRA			; 025F
	JP	NC,L0258	; 0260	JMP IF DRQ
;
	RLA			; 0263	TEST "BUSY" BIT
	JP	NC,L025C	; 0264	JUMP IF BUSY BIT SET
;
;	FDC NOT BUSY
;
	CALL	L027C		; 0267	AWAIT FDC READY, STATUS IN A REG
	AND	0CH		; 026A	MASK OUT CRC ERROR + LOST DATA
	LD	(8A0BH),A	; 026C	RETURN STATUS BITS
	RET	Z		; 026F	RETURN IF NO ERRORS
;
	LD	HL,8A0DH	; 0270	BUFFER ADDRESS??
	DEC	(HL)		; 0273
	JP	NZ,L0241	; 0274
	LD	A,(8A0BH)	; 0277
	OR	A		; 027A
	RET			; 027B
;
;	WAIT UNTIL FDC BECOMES "READY" OR TIMEOUT.
;
;	RETURNS FDC STATUS IN A REG.
;
L027C:	LD	L,05H		; 027C
L027E:	DEC	L		; 027E
	JP	NZ,L027E	; 027F	WASTE A LITTLE TIME
;
	LD	HL,0000H	; 0282
L0285:	DEC	HL		; 0285
	LD	A,H		; 0286
	OR	L		; 0287
	JP	NZ,L0293	; 0288	WAIT UNTIL HL RETURNS TO ZERO
;
L028B:	INC	A		; 028B	A=01
	RRCA			; 028C	A=80
	LD	(8A0BH),A	; 028D	FAILED STATUS RETURN
	JP	L0222		; 0290	EXIT FUNCTION
;
L0293:	IN	A,(08H)		; 0293	READ FDC STATUS
	CPL			; 0295	ONES COMPLEMENT
	RRA			; 0296	
	JP	C,L0285		; 0297	LOOP IF FDC "NOT READY"
;
	RLA			; 029A	RESTORE STATUS BYTE
	PUSH	AF		; 029B	SAVE FDC STATUS BYTE ON STACK
	LD	A,2FH		; 029C	FDC CMD = D0
	OUT	(08H),A		; 029E	FORCE INTERRUPT (TERMINATE FDC OP)
	POP	AF		; 02A0	RESTORE STATUS BYTE
	RET			; 02A1	RETURN
;
;	OPERATION COMPLETE??
;
L02A2:	LD	A,(8803H)	; 02A2
	AND	03EH		; 02A5	MASK OUT HEAD + DRIVE SEL
	OUT	(10H),A		; 02A7	SELECT DRIVE
	XOR	A		; 02A9
	LD	(8A0BH),A	; 02AA	STATUS = 0.
	JP	0039H		; 02AD
;
;	DELAY
;
L02B0:	LD	HL,1800H	; 02B0
L02B3:	PUSH	HL		; 02B3
	POP	HL		; 02B4
	DEC	HL		; 02B5
	LD	A,H		; 02B6
	OR	L		; 02B7
	JP	NZ,L02B3	; 02B8
	RET			; 02BB
;
;	REQUEST TYPE 04 : FORMAT A TRACK
;
;
;
L02BC:	LD	A,0FFH		; 02BC
	LD	(8A0CH),A	; 02BE	MARK AS A FORMAT REQUEST
	LD	A,(08803H)	; 02C1
	AND	1EH		; 02C4	MASK OUT DRIVE SELECT BITS
	LD	(8806H),A	; 02C6	SAVE IN 8806
;
	LD	BC,0FF01H	; 02C9	SIDE 00, 01 BYTES
	LD	(8A19H),BC	; 02CC	SAVE FOR FORMAT OPERATION
;
	LD	A,(8803H)	; 02D0	LOAD DRIVE SELECT ETC.
	AND	20H		; 02D3	HEAD SELECT BIT
	JP	Z,02DFH		; 02D5	JP IF NOT HEAD 1
;
;	HEAD=1
;
	LD	BC,0FE01H	; 02D8	SIDE 01, 01 BYTES
	LD	(8A19H),BC	; 02DB	SAVE FOR FORMAT OPERATION
;
;	SEE IF A SEEK IS REQUIRED FIRST
;
L02DF:	LD	A,(8805H)	; 02DF	CYL NO.
	LD	D,A		; 02E2	D=CYL NO.
	IN	A,(09H)		; 02E3	READ FDC CYL REGISTER
	CP	D		; 02E5	SAME?
	JP	Z,002F6H	; 02E6	JP IF SAME
;
;	NEED TO SEEK TO NEW CYL
;
	LD	A,D		; 02E9	A = CYL NO.
	OUT	(0BH),A		; 02EA	WRITE REQD CYL TO FDC DATA REG.
	LD	A,0E4H		; 02EC	FDC CMD = 1B (SEEK+HDLD+30MS STEP)
	OUT	(08H),A		; 02EE	ISSUE FDC SEEK CMD
	CALL	L027C		; 02F0	WAIT FOR FDC COMP + STATUS IN A REG.
	CALL	L02B0		; 02F3	DELAY
;
	LD	E,0FEH		; 02F6	SECTOR NO. (1 IN CPL FORM)
	LD	H,0AH		; 02F8	10 SECTORS (COUNTER)
	LD	A,0BH		; 02FA	FDC CMD = F4 (WRITE TRK + HD LD)
	OUT	(08H),A		; 02FC	START FORMAT (WRITE TRACK)
;
	LD	BC,0B128H	; 02FE	B=B1, C=28 (40 4E BYTES)
	CALL	L038E		; 0301  GAP AFTER INDEX PULSE
;
;	LOOP FOR THE TRACK (EACH SECTOR)
;
;				16 * 4E
;				10 * 00
;
L0304:	LD	BC,0B110H	; 0304	B=B1, C=10 (16 4E BYTES)
	CALL	L0038E		; 0307
	LD	BC,0FF0AH	; 030A	B=FF, C=0A (10 00 BYTES)
	CALL	L0038E		; 030D
;
;	WRITE ADDRESS MARK	3 * A1
;
	LD	BC,00A03H	; 0310	B=0A, C=03 (03 F5 BYTES)
	CALL	L0038E		; 0313	(WRITE A1 IN MFM, PRESET CRC) AM!
;
;	MARK START OF ID FIELD	1 * FE
;
	LD	BC,00101H	; 0316	B=01, C=01 (01 FE BYTES)
	CALL	L0038E		; 0319	(WRITE FE IN MFM)
;
;	CYL NO. (TRACK) TO SECTOR
;
	LD	B,D		; 031C	B=CYL NO. (CPL)
	LD	C,01H		; 031D	C=1 BYTES
	CALL	L038E		; 031F	(WRITE CYL NO.)
;
;	SIDE NUMBER SUPPLIED BY CALLER IN 8A1A, FOR (8A19) BYTES
;	8A1A IS IN ONES COMPLEMENT FORM.
;
	LD	BC,(8A19H)	; 0322	B=(8A1A), C=(8A19) BYTES
	CALL	L038E		; 0326
;
;	SECTOR NO. FROM E REG. (CPL)
;
	LD	B,E		; 0329	B=FE (1 IN 1'S COMPLEMENT)
	LD	C,01H		; 032A	C=01 BYTES
	CALL	L038E		; 032C	(SECTOR NO. FROM REG E)
;
;				1 * 02 (SETS 512 BYTE SECTORS)
;
	LD	BC,0FD01H	; 032F	B=FD, C=01
	CALL	L038E		; 0332	(WRITE 1 02 BYTE=512 BYTE SECTOR)
;
;				1 * F7 (GEN 2 CRC BYTES)
;
	LD	BC,00801H	; 0335	B=08, C=01
	CALL	L038E		; 0338	(WRITE 1 F7 BYTE)
;
;				22 * 4E	(GAP)
;
	LD	BC,0B116H	; 033B	B=B1, C=16
	CALL	L038E		; 033E	(WRITE 22 B1 BYTES)
;
;				12 * FF
;
	LD	BC,0FF0CH	; 0341	B=FF, C=0C
	CALL	L038E		; 0344	(WRITE 12 FF BYTES)
;
;	ADDRESS MARK (DATA)	3 * F5	
;
	LD	BC,00A03H	; 0347	B=0A, C=03
	CALL	L038E		; 034A	(WRITE 3 0A BYTES)
;
;				1 * FA	(PRESET CRC)
;
	LD	BC,00501H	; 034D	B=05, C=01
	CALL	L038E		; 0350	(WRITE 1 FA BYTE)
;
;				512 * E5
;
	LD	BC,0E5FFH	; 0353	B=E5, C=FF
	CALL	L038E		; 0356	(WRITE 255 E5 BYTES)
	LD	C,0FFH		; 0359	C=FF
	CALL	L038E		; 035B	(WRITE 255 E5 BYTES)
	LD	C,002H		; 035E	C=02
	CALL	L038E		; 0360	(WRITE 2 E5 BYTES)
;
;				1 * F7	(GEN 2 CRC BYTES)
;
	LD	BC,00801H	; 0363	B=08, C=01
	CALL	L038E		; 0366	(WRITE 1 08 BYTE)
;
;	END OF SECTOR
;
	DEC	E		; 0369	INC SECTOR (IN 1'S CPL)
	DEC	H		; 036A	DEC SECTOR COUNT
	JP	NZ,L0304	; 036B	LOOP FOR TRACK
;
;	DONE FORMATTING ALL SECTORS... FINISH TRACK WITH LAST GAP
;
;				510 * 4E	(GAP)
;
	LD	BC,0B1FFH	; 036E	B=B1, C=FF (ACTUALLY 255 * 4E)
	CALL	L039D		; 0371	
;
	LD	C,0FFH		; 0374
	CALL	L039D		; 0376	255 * 4E
;
;	READ FDC STATUS
;
	IN	A,(08H)		; 0379	READ FDC STATUS (INVERTED!)
	CPL			; 037B	NOW NORMAL STATUS
	AND	22H		; 037C	CHECK WRITE FAULT (+ DRQ ????)
	LD	(8A0BH),A	; 037E	SAVE IN STATUS REGS RETURN AREA
	JP	NZ,L0222	; 0381	JUMP IF BITS SET
;
;	TERMINATE NORMALLY
;
	LD	A,2FH		; 0384	FDC D0 CMD: FORCE INTERRUPT
	OUT	(08H),A		; 0386
	CALL	L03C8		; 0388	SMALL DELAY
	JP	L022A		; 038B	SUCCESSFUL COMPLETION
;
;	SUPPLIES FORMAT DATA BYTES:
;
;	B = DATA BYTE TO USE
;	C = COUNT OF DATA BYTES
;
L038E:	IN	A,(08H)		; 038E	READ FDC STATUS
	RRA			; 0390
	RRA			; 0391
	JP	C,L038E		; 0392	LOOP UNTIL DRQ
;
	LD	A,B		; 0395
	OUT	(0BH),A		; 0396	WRITE DR WITH DATA BYTE VALUE IN B
	DEC	C		; 0398
	JP	NZ,L038E	; 0399	FOR C REG BYTES
;
	RET			; 039C
;
;
;
L039D:	CALL	L0191H		; 039D	RETURN WHEN DRQ, ELSE CATCH ERROR
	LD	A,B		; 03A0	VALUE TO WRITE
	OUT	(0BH),A		; 03A1	SEND TO FDC DR
	DEC	C		; 03A3	DEC COUNT
	JP	NZ,L039D	; 03A4	LOOP C REG TIMES
	RET			; 03A7	RETURN
;
;	CODE TRANSFERS HERE IF 8A0C=FF WHILE FORMATTING (FROM L0191 ROUTINE)
;
L03A8:	POP	BC		; 03A8	POP RETURN ADDRESS FROM L039D CALL
	RET			; 03A9	RETURN
;
;	STEP IN ONE TRACK
;
L03AA:	EXX			; 03AA
	LD	A,0A4H		; 03AB	FDC 5B CMD: STEP IN
	OUT	(08H),A		; 03AD
	CALL	L027C		; 03AF	AWAIT FDC STATUS
	AND	00H		; 03B2
	EXX			; 03B4
	JP	NZ,L0222	; 03B5	FAIL EXIT
	RET			; 03B8	OK EXIT
;
;	STEP OUT ONE TRACK
;
L03B9:	EXX			; 03B9
	LD	A,84H		; 03BA	FDC 76 CMD: STEP OUT
	OUT	(08H),A		; 03BC
	CALL	L027C		; 03BE	AWAIT FDC READY
	AND	00H		; 03C1	TEST STATUS
	EXX			; 03C3	RESTORE REGS
	JP	NZ,L0222	; 03C4	JUMP IF FAILED
	RET			; 03C7	RETURN IF OK
;
;	SMALL DELAY
;
L03C8:	LD	A,05H		; 03C8
L03CA:	DEC	A		; 03CA
	JP	NZ,L03CA	; 03CB
	RET			; 03CE
;
;
;
	RST	38H		; 03CF
	RST	38H		; 03D0
	RST	38H		; 03D1
	RST	38H		; 03D2
	RST	38H		; 03D3
	RST	38H		; 03D4
	RST	38H		; 03D5
	RST	38H		; 03D6
	RST	38H		; 03D7
	RST	38H		; 03D8
	RST	38H		; 03D9
	RST	38H		; 03DA
	RST	38H		; 03DB
	RST	38H		; 03DC
	RST	38H		; 03DD
	RST	38H		; 03DE
	RST	38H		; 03DF
	RST	38H		; 03E0
	RST	38H		; 03E1
	RST	38H		; 03E2
	RST	38H		; 03E3
	RST	38H		; 03E4
	RST	38H		; 03E5
	RST	38H		; 03E6
	RST	38H		; 03E7
	RST	38H		; 03E8
	RST	38H		; 03E9
	RST	38H		; 03EA
	RST	38H		; 03EB
	RST	38H		; 03EC
	RST	38H		; 03ED
	RST	38H		; 03EE
	RST	38H		; 03EF
	RST	38H		; 03F0
	RST	38H		; 03F1
	RST	38H		; 03F2
	RST	38H		; 03F3
	RST	38H		; 03F4
	RST	38H		; 03F5
	RST	38H		; 03F6
	RST	38H		; 03F7
	RST	38H		; 03F8
	RST	38H		; 03F9
	RST	38H		; 03FA
	RST	38H		; 03FB
	RST	38H		; 03FC
	RST	38H		; 03FD
	LD	(HL),A		; 03FE
	RST	38H		; 03FF
;
;	THIS CODE IS COPIED TO C000 IN THE MAIN CPU WHEN THE SYSTEM
;	IS INITIALIZED.
;
LC000:	JP	0C006H		; 0400
LC003:	JP	0C260H		; 0403
LC006:	DI			; 0406
	LD	SP,0F3FFH	; 0407
	LD	A,082H		; 040A
	OUT	(06BH),A	; 040C
	LD	A,02AH		; 040E
	OUT	(06AH),A	; 0410
	LD	A,043H		; 0412
	LD	(0C322H),A	; 0414
	OUT	(068H),A	; 0417
	LD	A,008H		; 0419
	OUT	(06BH),A	; 041B
	LD	A,055H		; 041D
	LD	(08800H),A	; 041F
	LD	A,0AAH		; 0422
	LD	(08801H),A	; 0424
	LD	A,0B2H		; 0427
	OUT	(06AH),A	; 0429
	LD	A,0C3H		; 042B
	LD	(00038H),A	; 042D
	LD	HL,0C0DAH	; 0430
	LD	(00039H),HL	; 0433
	LD	HL,00000H	; 0436
	LD	(0C2DEH),HL	; 0439
	LD	(0C2E0H),HL	; 043C
	LD	(0C2E2H),HL	; 043F
	LD	(0C2E4H),HL	; 0442
	LD	HL,0C2E9H	; 0445
	LD	B,019H		; 0448
	LD	A,000H		; 044A
	LD	(HL),A		; 044C
	INC	HL		; 044D
	DEC	B		; 044E
	JP	NZ,0C04CH	; 044F
	LD	HL,0C302H	; 0452
	LD	B,019H		; 0455
	LD	A,000H		; 0457
	LD	(HL),A		; 0459
	INC	HL		; 045A
	DEC	B		; 045B
	JP	NZ,0C059H	; 045C
	LD	(0C31EH),A	; 045F
	LD	(0C31FH),A	; 0462
	CALL	0C125H		; 0465
	OUT	(048H),A	; 0468
	IM	1		; 046A
	EI			; 046C
	JP	0C0A6H		; 046D
	LD	HL,0C084H	; 0470
	CALL	0C077H		; 0473
	RET			; 0476
	LD	A,(HL)		; 0477
	PUSH	HL		; 0478
	CALL	0C0F7H		; 0479
	POP	HL		; 047C
	LD	A,(HL)		; 047D
	OR	A		; 047E
	RET	M		; 047F
	INC	HL		; 0480
	JP	0C077H		; 0481
	INC	SP		; 0484
	LD	L,031H		; 0485
	JR	NZ,014A9H	; 0487
	JR	NZ,014D4H	; 0489
	LD	C,(HL)		; 048B
	LD	D,E		; 048C
	LD	B,L		; 048D
	LD	D,D		; 048E
	LD	D,H		; 048F
	JR	NZ,014D6H	; 0490
	LD	C,C		; 0492
	LD	D,E		; 0493
	LD	C,E		; 0494
	LD	B,L		; 0495
	LD	D,H		; 0496
	LD	D,H		; 0497
	LD	B,L		; 0498
	JR	NZ,014E4H	; 0499
	LD	C,(HL)		; 049B
	LD	D,H		; 049C
	LD	C,A		; 049D
	JR	NZ,014E4H	; 049E
	LD	D,D		; 04A0
	LD	C,C		; 04A1
	LD	D,(HL)		; 04A2
	LD	B,L		; 04A3
	JR	NZ,01467H	; 04A4
	LD	BC,0FF00H	; 04A6
	CALL	0C271H		; 04A9
	CALL	0C2B6H		; 04AC
	CALL	0C2AAH		; 04AF
	AND	080H		; 04B2
	JP	Z,0C0CBH	; 04B4
	CALL	0C070H		; 04B7
	LD	BC,00000H	; 04BA
	CALL	0C271H		; 04BD
	CALL	0C2B6H		; 04C0
	CALL	0C2AAH		; 04C3
	AND	080H		; 04C6
	JP	NZ,0C0BAH	; 04C8
	LD	HL,0C780H	; 04CB
	LD	DE,00001H	; 04CE
	LD	BC,00100H	; 04D1
	CALL	0C260H		; 04D4
	JP	0C780H		; 04D7
	PUSH	HL		; 04DA
	PUSH	DE		; 04DB
	PUSH	BC		; 04DC
	PUSH	AF		; 04DD
	IN	A,(069H)	; 04DE
	AND	004H		; 04E0
	JP	Z,0C0F1H	; 04E2
	CALL	0C125H		; 04E5
	IN	A,(048H)	; 04E8
	POP	AF		; 04EA
	POP	BC		; 04EB
	POP	DE		; 04EC
	POP	HL		; 04ED
	EI			; 04EE
	RETI			; 04EF
	CALL	0C10FH		; 04F1
	JP	0C0E8H		; 04F4
	AND	07FH		; 04F7
	LD	B,A		; 04F9
	SUB	020H		; 04FA
	JP	M,0C104H	; 04FC
	LD	A,B		; 04FF
	CALL	0C150H		; 0500
	RET			; 0503
	CP	00AH		; 0504
	JP	Z,0C236H	; 0506
	CP	00DH		; 0509
	JP	Z,0C254H	; 050B
	RET			; 050E
	LD	HL,(0C2E7H)	; 050F
	LD	A,(HL)		; 0512
	INC	HL		; 0513
	LD	(0C2E7H),HL	; 0514
	OR	A		; 0517
	JP	Z,0C120H	; 0518
	LD	A,002H		; 051B
	OUT	(06BH),A	; 051D
	RET			; 051F
	LD	A,003H		; 0520
	OUT	(06BH),A	; 0522
	RET			; 0524
	CALL	0C1EBH		; 0525
	LD	HL,0C302H	; 0528
	LD	DE,0C2E9H	; 052B
	LD	BC,00019H	; 052E
	LDIR			; 0531
	LD	HL,0C2E9H	; 0533
	LD	(0C2E7H),HL	; 0536
	CALL	0C10FH		; 0539
	LD	A,(0C31CH)	; 053C
	DEC	A		; 053F
	LD	(0C31CH),A	; 0540
	LD	A,(0C31BH)	; 0543
	DEC	A		; 0546
	LD	(0C31BH),A	; 0547
	RET	NZ		; 054A
	LD	A,00CH		; 054B
	OUT	(06BH),A	; 054D
	RET			; 054F
	LD	(0C2E6H),A	; 0550
	CALL	0C16AH		; 0553
	LD	A,(HL)		; 0556
	OR	A		; 0557
	CALL	Z,0C1D5H	; 0558
	LD	HL,(0C2E0H)	; 055B
	LD	A,H		; 055E
	OR	0F8H		; 055F
	LD	H,A		; 0561
	LD	A,(0C2E6H)	; 0562
	LD	(HL),A		; 0565
	CALL	0C210H		; 0566
	RET			; 0569
	LD	HL,0C302H	; 056A
	LD	D,000H		; 056D
	LD	A,(0C2DFH)	; 056F
	LD	E,A		; 0572
	ADD	HL,DE		; 0573
	RET			; 0574
	DI			; 0575
	LD	HL,(0C2E4H)	; 0576
	LD	DE,00050H	; 0579
	ADD	HL,DE		; 057C
	LD	(0C2E4H),HL	; 057D
	LD	HL,0C303H	; 0580
	LD	DE,0C302H	; 0583
	LD	BC,00018H	; 0586
	LDIR			; 0589
	LD	A,000H		; 058B
	LD	(DE),A		; 058D
	EI			; 058E
	RET			; 058F
	LD	HL,0C1A3H	; 0590
	LD	A,(0C2DFH)	; 0593
	RLCA			; 0596
	LD	E,A		; 0597
	LD	D,000H		; 0598
	ADD	HL,DE		; 059A
	LD	E,(HL)		; 059B
	INC	HL		; 059C
	LD	D,(HL)		; 059D
	LD	HL,(0C2E4H)	; 059E
	ADD	HL,DE		; 05A1
	RET			; 05A2
;
	ORG	015A5H
	LD	D,B		; 05A5
;
	ORG	015A7H
	AND	B		; 05A7
;
	ORG	015A9H
	RET	P		; 05A9
;
	ORG	015ABH
	LD	B,B		; 05AB
	LD	BC,00190H	; 05AC
	RET	PO		; 05AF
	LD	BC,00230H	; 05B0
	ADD	A,B		; 05B3
	LD	(BC),A		; 05B4
	RET	NC		; 05B5
	LD	(BC),A		; 05B6
	JR	NZ,015BCH	; 05B7
	LD	(HL),B		; 05B9
	INC	BC		; 05BA
	RET	NZ		; 05BB
	INC	BC		; 05BC
	DJNZ	015C3H		; 05BD
	LD	H,B		; 05BF
	INC	B		; 05C0
	OR	B		; 05C1
	INC	B		; 05C2
;
	ORG	015C4H
	DEC	B		; 05C4
	LD	D,B		; 05C5
	DEC	B		; 05C6
	AND	B		; 05C7
	DEC	B		; 05C8
	RET	P		; 05C9
	DEC	B		; 05CA
	LD	B,B		; 05CB
	LD	B,090H		; 05CC
	LD	B,0E0H		; 05CE
	LD	B,030H		; 05D0
	RLCA			; 05D2
	ADD	A,B		; 05D3
	RLCA			; 05D4
	CALL	0C190H		; 05D5
	LD	D,050H		; 05D8
	LD	A,0F8H		; 05DA
	OR	H		; 05DC
	LD	H,A		; 05DD
	LD	(HL),020H	; 05DE
	INC	HL		; 05E0
	DEC	D		; 05E1
	JP	NZ,0C1DAH	; 05E2
	CALL	0C16AH		; 05E5
	LD	(HL),0FFH	; 05E8
	RET			; 05EA
	LD	HL,(0C2E4H)	; 05EB
	LD	(0C2E2H),HL	; 05EE
	EX	DE,HL		; 05F1
	LD	HL,(0C2E0H)	; 05F2
	LD	A,H		; 05F5
	AND	00FH		; 05F6
	LD	H,A		; 05F8
	LD	A,D		; 05F9
	AND	00FH		; 05FA
	LD	D,A		; 05FC
	LD	A,001H		; 05FD
	OUT	(06BH),A	; 05FF
	LD	A,003H		; 0601
	LD	(HL),A		; 0603
	LD	A,001H		; 0604
	EX	DE,HL		; 0606
	LD	(HL),A		; 0607
	LD	A,002H		; 0608
	LD	(HL),A		; 060A
	LD	A,000H		; 060B
	OUT	(06BH),A	; 060D
	RET			; 060F
	LD	HL,(0C2E0H)	; 0610
	INC	HL		; 0613
	LD	(0C2E0H),HL	; 0614
	LD	HL,(0C2DEH)	; 0617
	INC	L		; 061A
	LD	A,L		; 061B
	CP	050H		; 061C
	JP	NZ,0C232H	; 061E
	LD	L,000H		; 0621
	LD	A,H		; 0623
	CP	018H		; 0624
	JP	NZ,0C231H	; 0626
	PUSH	HL		; 0629
	CALL	0C175H		; 062A
	POP	HL		; 062D
	JP	0C232H		; 062E
	INC	H		; 0631
	LD	(0C2DEH),HL	; 0632
	RET			; 0635
	LD	HL,(0C2E0H)	; 0636
	LD	DE,00050H	; 0639
	ADD	HL,DE		; 063C
	LD	(0C2E0H),HL	; 063D
	LD	A,(0C2DFH)	; 0640
	CP	018H		; 0643
	JP	NZ,0C24FH	; 0645
	LD	(0C2DFH),A	; 0648
	CALL	0C175H		; 064B
	RET			; 064E
	INC	A		; 064F
	LD	(0C2DFH),A	; 0650
	RET			; 0653
	CALL	0C190H		; 0654
	LD	(0C2E0H),HL	; 0657
	LD	A,000H		; 065A
	LD	(0C2DEH),A	; 065C
	RET			; 065F
	PUSH	HL		; 0660
	CALL	0C271H		; 0661
	CALL	0C2B6H		; 0664
	POP	HL		; 0667
	CALL	0C29AH		; 0668
	CALL	0C2AAH		; 066B
	AND	001H		; 066E
	RET			; 0670
	CALL	0C2C5H		; 0671
	LD	HL,08802H	; 0674
	LD	(HL),B		; 0677
	INC	HL		; 0678
	LD	(HL),C		; 0679
	INC	HL		; 067A
	LD	A,E		; 067B
	CPL			; 067C
	LD	(HL),A		; 067D
	INC	HL		; 067E
	LD	A,D		; 067F
	CPL			; 0680
	LD	(HL),A		; 0681
	LD	A,0FFH		; 0682
	LD	(08807H),A	; 0684
	CALL	0C2D4H		; 0687
	RET			; 068A
	CALL	0C2C5H		; 068B
	LD	DE,08808H	; 068E
	LD	BC,00200H	; 0691
	LDIR			; 0694
	CALL	0C2D4H		; 0696
	RET			; 0699
	CALL	0C2C5H		; 069A
	EX	DE,HL		; 069D
	LD	HL,08808H	; 069E
	LD	BC,00200H	; 06A1
	LDIR			; 06A4
	CALL	0C2D4H		; 06A6
	RET			; 06A9
	CALL	0C2C5H		; 06AA
	LD	A,(08A0BH)	; 06AD
	PUSH	AF		; 06B0
	CALL	0C2D4H		; 06B1
	POP	AF		; 06B4
	RET			; 06B5
	IN	A,(069H)	; 06B6
	AND	020H		; 06B8
	JP	Z,0C2B6H	; 06BA
	IN	A,(069H)	; 06BD
	AND	020H		; 06BF
	JP	NZ,0C2BDH	; 06C1
	RET			; 06C4
	LD	A,00AH		; 06C5
	OUT	(06BH),A	; 06C7
	IN	A,(069H)	; 06C9
	RLA			; 06CB
	JP	C,0C2C9H	; 06CC
	LD	A,008H		; 06CF
	OUT	(06BH),A	; 06D1
	RET			; 06D3
	LD	A,009H		; 06D4
	OUT	(06BH),A	; 06D6
	LD	A,00BH		; 06D8
	OUT	(06BH),A	; 06DA
	RET			; 06DC
	INC	BC		; 06DD
	LD	HL,0DD06H	; 06DE
	CP	058H		; 06E1
	JR	Z,016F5H	; 06E3
	LD	B,0FDH		; 06E5
	CP	059H		; 06E7
	JR	Z,016F5H	; 06E9
	LD	B,000H		; 06EB
	CP	048H		; 06ED
	JR	NZ,01707H	; 06EF
	LD	A,C		; 06F1
	OR	L		; 06F2
	JR	NZ,01707H	; 06F3
	CALL	01EAFH		; 06F5
	JR	C,01709H	; 06F8
	CP	029H		; 06FA
	JR	NZ,01709H	; 06FC
	CALL	01D4FH		; 06FE
	LD	A,006H		; 0701
	LD	E,L		; 0703
	POP	HL		; 0704
	SCF			; 0705
	RET			; 0706
	LD	B,000H		; 0707
	CALL	025E8H		; 0709
	JR	01701H		; 070C
	LD	A,C		; 070E
	OR	A		; 070F
	CALL	NZ,025D8H	; 0710
	LD	A,L		; 0713
	POP	HL		; 0714
	JR	01727H		; 0715
	CALL	022C7H		; 0717
	PUSH	BC		; 071A
	PUSH	AF		; 071B
	RLCA			; 071C
	RLCA			; 071D
	RLCA			; 071E
	LD	B,A		; 071F
	POP	AF		; 0720
	LD	A,B		; 0721
	POP	BC		; 0722
	RET			; 0723
	CALL	0238FH		; 0724
	PUSH	AF		; 0727
	CP	008H		; 0728
	CALL	NC,025E0H	; 072A
	POP	AF		; 072D
	AND	007H		; 072E
	RET			; 0730
	CALL	02324H		; 0731
	RLCA			; 0734
	RLCA			; 0735
	RLCA			; 0736
	RET			; 0737
	CALL	01EB2H		; 0738
	JR	C,0175AH	; 073B
	CALL	02103H		; 073D
	LD	B,0DDH		; 0740
	CP	058H		; 0742
	JR	Z,0174CH	; 0744
	LD	B,0FDH		; 0746
	CP	059H		; 0748
	JR	NZ,01760H	; 074A
	CALL	01D4FH		; 074C
	LD	A,(00142H)	; 074F
	OR	A		; 0752
	CALL	NZ,025ECH	; 0753
	LD	A,020H		; 0756
	SCF			; 0758
	RET			; 0759
	CALL	025CCH		; 075A
	XOR	A		; 075D
	LD	B,A		; 075E
	RET			; 075F
	CALL	0238FH		; 0760
	CP	008H		; 0763
	CALL	NC,025E0H	; 0765
	AND	007H		; 0768
	RRCA			; 076A
	CALL	C,025E0H	; 076B
	RLCA			; 076E
	RLCA			; 076F
	RLCA			; 0770
	RLCA			; 0771
	LD	B,000H		; 0772
	RET			; 0774
	CALL	02A46H		; 0775
	JR	Z,01787H	; 0778
	CP	004H		; 077A
	JR	C,01784H	; 077C
	LD	A,(00138H)	; 077E
	CP	C		; 0781
	JR	NZ,01787H	; 0782
	CALL	025D8H		; 0784
	LD	A,H		; 0787
	OR	A		; 0788
	RET	Z		; 0789
	INC	A		; 078A
	RET	Z		; 078B
	JP	025E0H		; 078C
	PUSH	BC		; 078F
	PUSH	HL		; 0790
	CALL	02A46H		; 0791
	CALL	NZ,025D8H	; 0794
	LD	A,H		; 0797
	OR	A		; 0798
	JR	Z,0179FH	; 0799
	INC	A		; 079B
	CALL	NZ,025E0H	; 079C
	LD	A,L		; 079F
	POP	HL		; 07A0
	POP	BC		; 07A1
	RET			; 07A2
	EX	DE,HL		; 07A3
	LD	HL,(00322H)	; 07A4
	PUSH	HL		; 07A7
	LD	(0033FH),HL	; 07A8
	LD	B,00BH		; 07AB
	XOR	A		; 07AD
	CALL	0258FH		; 07AE
	DJNZ	017AEH		; 07B1
	EX	DE,HL		; 07B3
	INC	HL		; 07B4
	INC	HL		; 07B5
	INC	HL		; 07B6
	LD	B,(HL)		; 07B7
	INC	HL		; 07B8
	PUSH	HL		; 07B9
	LD	C,000H		; 07BA
	LD	H,000H		; 07BC
	CALL	01EB2H		; 07BE
	JP	C,024B5H	; 07C1
	CP	05BH		; 07C4
	JR	NZ,017D1H	; 07C6
	INC	H		; 07C8
	CALL	01EAFH		; 07C9
	CP	05DH		; 07CC
	JP	Z,024B5H	; 07CE
	CP	028H		; 07D1
	JR	NZ,017EEH	; 07D3
	LD	L,001H		; 07D5
	CALL	01D4FH		; 07D7
	CP	029H		; 07DA
	JR	NZ,017E7H	; 07DC
	DEC	L		; 07DE
	JP	Z,02491H	; 07DF
	CALL	0258FH		; 07E2
	JR	017D7H		; 07E5
	CP	028H		; 07E7
	JR	NZ,017E2H	; 07E9
	INC	L		; 07EB
	JR	017E2H		; 07EC
	CP	05CH		; 07EE
	JR	NZ,01839H	; 07F0
	CALL	01D4FH		; 07F2
	PUSH	BC		; 07F5
	PUSH	HL		; 07F6
	CALL	02A46H		; 07F7
	CALL	NZ,025CCH	; 07FA
	LD	A,(00117H)	; 07FD
;
	END
